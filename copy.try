#include "main.h"
#include <unistd.h>

/**
 * _printf - function to print
 *
 * @format: What we have to print
 *
 * Return: the number of characteres
 */
int _printf(const char *format, ...)
{
	int counter = 0, counter_arg = 0, validOperation = 0, size = 0;
	char buffer[1024];

	convert_arg funct_struct[] = {

		{'c', pr_char},
		{'s', pr_string},
		{'\0', NULL}
	};

	va_list param_to_exe;

	va_start(param_to_exe, format);

	for (counter = 0; format[counter] != '\0' && format != NULL; counter++)
	{
		counter_arg = 0;

		if (format[counter] != '%')
		{
			buffer[size] += format[counter];
			continue;
		}
		while (funct_struct[counter_arg].type != '\0')
		{
			if (format[counter + 1] == '\0')
			{
				validOperation = 0;
				counter_arg++;
				break;
			}
			if (format[counter + 1] == funct_struct[counter_arg].type)
			{
				size += funct_struct[counter_arg].p_function(param_to_exe, size, buffer);
				counter++;
				validOperation = 1;
				break;
			}
		}
		if (!validOperation)
			buffer[size] = format[counter];
	}
	va_end(param_to_exe);
	write(1, buffer, size);
	return (size);
}
